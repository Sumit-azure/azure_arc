{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.12.40.16777",
      "templateHash": "5463622317411077072"
    }
  },
  "parameters": {
     "azureusername": {
      "type": "string"
      
    },
    "azurepassword": {
      "type": "secureString"
    
    },
    "spnClientId": {
      "type": "string",
      "metadata": {
        "description": "Azure service principal client id"
      }
    },
    "spnClientSecret": {
      "type": "secureString",
      "metadata": {
        "description": "Azure service principal client secret"
      }
    },
    "spnTenantId": {
      "type": "string",
        "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "Azure AD tenant id for your service principal"
      }
    },
    "windowsAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for Windows account"
      }
    },
    "windowsAdminPassword": {
      "type": "secureString",
      "maxLength": 123,
      "minLength": 12,
      "metadata": {
        "description": "Password for Windows account. Password must have 3 of the following: 1 lower case character, 1 upper case character, 1 number, and 1 special character. The value must be between 12 and 123 characters long"
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "metadata": {
        "description": "Name for your log analytics workspace"
      }
    },
    "registerCluster": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Option to disable automatic cluster registration. Setting this to false will also disable deploying AKS and Resource bridge"
      }
    },
    "deployAKSHCI": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Option to deploy AKS-HCI with HCIBox"
      }
    },
    "deployResourceBridge": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Option to deploy Resource Bridge with HCIBox"
      }
    },
    "natDNS": {
      "type": "string",
      "defaultValue": "8.8.8.8",
      "metadata": {
        "description": "Public DNS to use for the domain"
      }
    },
    "githubAccount": {
      "type": "string",
      "defaultValue": "Sumit-azure",
      "metadata": {
        "description": "Target GitHub account"
      }
    },
    "githubBranch": {
      "type": "string",
      "defaultValue": "main",
      "metadata": {
        "description": "Target GitHub branch"
      }
    },
    "deployBastion": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Choice to deploy Bastion to connect to the client VM"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location to deploy resources"
      }
    },
     "DeploymentID": {
      "type": "string"
    }
  },
  "variables": {
    "AzureTenantID": "[subscription().tenantId]",
    
    "templateBaseUrl": "https://raw.githubusercontent.com/CloudLabsAI-Azure/azure_arc_2024/sumit-automation/azure_jumpstart_hcibox/"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "mgmtArtifactsAndPolicyDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "workspaceName": {
            "value": "[parameters('logAnalyticsWorkspaceName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.12.40.16777",
              "templateHash": "15958021173320564523"
            }
          },
          "parameters": {
            "workspaceName": {
              "type": "string",
              "metadata": {
                "description": "Name for your log analytics workspace"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure Region to deploy the Log Analytics Workspace"
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "pergb2018",
              "metadata": {
                "description": "SKU, leave default pergb2018"
              }
            }
          },
          "variables": {
            "security": {
              "name": "[format('Security({0})', parameters('workspaceName'))]",
              "galleryName": "Security"
            },
            "automationAccountName": "[format('HCIBox-Automation-{0}', uniqueString(resourceGroup().id))]",
            "automationAccountLocation": "[if(equals(parameters('location'), 'eastus'), 'eastus2', if(equals(parameters('location'), 'eastus2'), 'eastus', parameters('location')))]"
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-06-01",
              "name": "[parameters('workspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "[parameters('sku')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationsManagement/solutions",
              "apiVersion": "2015-11-01-preview",
              "name": "[format('VMInsights({0})', split(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName')), '/')[8])]",
              "location": "[parameters('location')]",
              "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
              },
              "plan": {
                "name": "[format('VMInsights({0})', split(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName')), '/')[8])]",
                "product": "OMSGallery/VMInsights",
                "promotionCode": "",
                "publisher": "Microsoft"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.OperationsManagement/solutions",
              "apiVersion": "2015-11-01-preview",
              "name": "[variables('security').name]",
              "location": "[parameters('location')]",
              "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
              },
              "plan": {
                "name": "[variables('security').name]",
                "promotionCode": "",
                "product": "[format('OMSGallery/{0}', variables('security').galleryName)]",
                "publisher": "Microsoft"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Automation/automationAccounts",
              "apiVersion": "2021-06-22",
              "name": "[variables('automationAccountName')]",
              "location": "[variables('automationAccountLocation')]",
              "properties": {
                "sku": {
                  "name": "Basic"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/linkedServices",
              "apiVersion": "2020-08-01",
              "name": "[format('{0}/{1}', parameters('workspaceName'), 'Automation')]",
              "properties": {
                "resourceId": "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "stagingStorageAccountDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.12.40.16777",
              "templateHash": "8234938478342075972"
            }
          },
          "parameters": {
            "storageAccountType": {
              "type": "string",
              "defaultValue": "Standard_LRS",
              "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS",
                "Premium_LRS"
              ],
              "metadata": {
                "description": "Storage Account type"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for all resources."
              }
            }
          },
          "variables": {
            "storageAccountName": "[format('hcibox{0}', uniqueString(resourceGroup().id))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-06-01",
              "name": "[variables('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('storageAccountType')]"
              },
              "kind": "StorageV2",
              "properties": {
                "supportsHttpsTrafficOnly": true
              }
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[variables('storageAccountName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "hostVmDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "windowsAdminUsername": {
            "value": "[parameters('windowsAdminUsername')]"
          },
          "windowsAdminPassword": {
            "value": "[parameters('windowsAdminPassword')]"
          },
          "spnClientId": {
            "value": "[parameters('spnClientId')]"
          },
          "spnClientSecret": {
            "value": "[parameters('spnClientSecret')]"
          },
          "spnTenantId": {
            "value": "[parameters('spnTenantId')]"
          },
          "workspaceName": {
            "value": "[parameters('logAnalyticsWorkspaceName')]"
          },
          "stagingStorageAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'stagingStorageAccountDeployment'), '2020-10-01').outputs.storageAccountName.value]"
          },
          "templateBaseUrl": {
            "value": "[variables('templateBaseUrl')]"
          },
       
          "deployBastion": {
            "value": "[parameters('deployBastion')]"
          },
          "registerCluster": {
            "value": "[parameters('registerCluster')]"
          },
          "deployAKSHCI": {
            "value": "[parameters('deployAKSHCI')]"
          },
          "deployResourceBridge": {
            "value": "[parameters('deployResourceBridge')]"
          },
          "natDNS": {
            "value": "[parameters('natDNS')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
           "DeploymentID": {
            "value": "[parameters('DeploymentID')]"
          },
          "azureusername": {
            "value": "[parameters('azureusername')]"
          },
           "azurepassword": {
            "value": "[parameters('azureusername')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.12.40.16777",
              "templateHash": "7350178746438702927"
            }
          },
          "parameters": {
            "vmName": {
              "type": "string",
              "defaultValue": "HCIBox-Client",
              "metadata": {
                "description": "The name of your Virtual Machine"
              }
            },
            "windowsAdminUsername": {
              "type": "string",
              "defaultValue": "arcdemo",
              "metadata": {
                "description": "Username for the Virtual Machine"
              }
            },
            "windowsAdminPassword": {
              "type": "secureString",
              "maxLength": 123,
              "minLength": 12,
              "metadata": {
                "description": "Password for Windows account. Password must have 3 of the following: 1 lower case character, 1 upper case character, 1 number, and 1 special character. The value must be between 12 and 123 characters long"
              }
            },
            "windowsOSVersion": {
              "type": "string",
              "defaultValue": "2022-datacenter-g2",
              "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for all resources"
              }
            },
           
            "resourceTags": {
              "type": "object",
              "defaultValue": {
                "Project": "jumpstart_HCIBox"
              }
            },
            "spnClientId": {
              "type": "string",
              "metadata": {
                "description": "Client id of the service principal"
              }
            },
            "spnClientSecret": {
              "type": "secureString",
              "metadata": {
                "description": "Client secret of the service principal"
              }
            },
            "spnTenantId": {
              "type": "string",
              "metadata": {
                "description": "Tenant id of the service principal"
              }
            },
            "stagingStorageAccountName": {
              "type": "string",
              "metadata": {
                "description": "Name for the staging storage account using to hold kubeconfig. This value is passed into the template as an output from mgmtStagingStorage.json"
              }
            },
            "workspaceName": {
              "type": "string",
              "metadata": {
                "description": "Name for the environment Azure Log Analytics workspace"
              }
            },
            "templateBaseUrl": {
              "type": "string",
              "metadata": {
                "description": "The base URL used for accessing artifacts and automation artifacts."
              }
            },
            "registerCluster": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Option to disable automatic cluster registration. Setting this to false will also disable deploying AKS and Resource bridge"
              }
            },
            "deployBastion": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Choice to deploy Bastion to connect to the client VM"
              }
            },
            "deployAKSHCI": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Option to deploy AKS-HCI with HCIBox"
              }
            },
            "deployResourceBridge": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Option to deploy Resource Bridge with HCIBox"
              }
            },
            "natDNS": {
              "type": "string",
              "defaultValue": "8.8.8.8",
              "metadata": {
                "description": "Public DNS to use for the domain"
              }
            },
             "DeploymentID": {
      "type": "string"
    },
    "azureusername": {
      "type": "string"
    },
    "azurepassword":{
      "type": "string"
    },
		  "subscriptionId": {
			  "type": "string",
			  "defaultValue": "subscription().subscriptionId"
		  }
          },
          "variables": {
            "encodedPassword": "[base64(parameters('windowsAdminPassword'))]",
            "bastionName": "HCIBox-Bastion",
            "prefix": "archost",
     "publicIpAddressDNSName": "[concat(variables('prefix'), parameters('DeploymentID'))]",
            "publicIpAddressName": "[if(equals(parameters('deployBastion'), false()), format('{0}-PIP', parameters('vmName')), format('{0}-PIP', variables('bastionName')))]",
            "networkInterfaceName": "[format('{0}-NIC', parameters('vmName'))]",
            "osDiskType": "Premium_LRS"
          
          },
          "resources": [
         
      
         
        
                   {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "azurestack-vm-deployment",
            "location": "[resourceGroup().location]",
            "kind": "AzurePowerShell",
            "properties": {
                "azPowerShellVersion": "5.0",
                "arguments": "[concat('-AzureUsername', ' ', concat('\\\"', parameters('AzureUsername'), '\\\"'), '-AzurePassword', ' ', concat('\\\"', parameters('AzurePassword'), '\\\"') , '-DeploymentID', ' ', concat('\\\"', parameters('DeploymentID'), '\\\"'), '-AzureSubscriptionID', ' ' , concat('\\\"', parameters('subscriptionId'), '\\\"'), '-AzureTenantID', ' ' , concat('\\\"', parameters('spnTenantId'), '\\\"'), '-AppID', ' ', concat('\\\"', parameters('spnClientId'), '\\\"'), '-AppSecret', ' ', concat('\\\"', parameters('spnClientSecret'), '\\\"'))]",
                "primaryScriptUri": "https://raw.githubusercontent.com/Sumit-azure/azure_arc/main/azure_jumpstart_hcibox/bicep/deployvm.ps1",
                "supportingScriptUris": [],
                "timeout": "PT45M",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
            }
        },
                {

      "type": "Microsoft.Resources/deploymentScripts",

      "apiVersion": "2020-10-01",

      "kind": "AzurePowerShell",

      "name": "WaitSection",

      "location": "[parameters('location')]",

      "dependsOn": ["azurestack-vm-deployment"],

      "properties": {

        "azPowerShellVersion": "3.0",

        "scriptContent": "start-sleep -Seconds 200",

        "cleanupPreference": "Always",

        "retentionInterval": "PT1H"

      }

    },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('vmName'), 'Bootstrap')]",
              "location": "[parameters('location')]",
                "dependsOn": ["WaitSection", "azurestack-vm-deployment"],
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.10",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "https://raw.githubusercontent.com/CloudLabsAI-Azure/azure_arc_2024//sumit-automation/azure_jumpstart_hcibox/artifacts/PowerShell/Bootstrap.ps1"
                  ],
               
                  "commandToExecute": "[format('powershell.exe -ExecutionPolicy Bypass -File Bootstrap.ps1 -adminUsername {0} -adminPassword {1} -spnClientId {2} -spnClientSecret {3} -spnTenantId {4} -subscriptionId {5} -resourceGroup {6} -azureLocation {7} -stagingStorageAccountName {8} -workspaceName {9} -templateBaseUrl {10} -registerCluster {11} -deployAKSHCI {12} -deployResourceBridge {13} -natDNS {14} -azureUsername {15} -azurePassword {16}', parameters('windowsAdminUsername'), variables('encodedPassword'), parameters('spnClientId'), parameters('spnClientSecret'), parameters('spnTenantId'), subscription().subscriptionId, resourceGroup().name, parameters('location'), parameters('stagingStorageAccountName'), parameters('workspaceName'), parameters('templateBaseUrl'), parameters('registerCluster'), parameters('deployAKSHCI'), parameters('deployResourceBridge'), parameters('natDNS'), parameters('azureUsername'), parameters('azurePassword'))]" }
              }
            }
          ],
          "outputs": {
            "adminUsername": {
              "type": "string",
              "value": "[parameters('windowsAdminUsername')]"
            },
              "HCIHost VM DNS": {
      "value": "[concat('hciboxclient',parameters('DeploymentID'), '.', resourceGroup().location, '.cloudapp.azure.com')]",
      "type": "string"
    },
            "base64Output": {
              "type": "string",
              "value": "[variables('encodedPassword')]"
            }
          }
        }
      },
      "dependsOn": [
       
        "[resourceId('Microsoft.Resources/deployments', 'stagingStorageAccountDeployment')]"
      ]
    }
  ],
  "outputs":{
     "HCIHost VM DNS": {
      "value": "[concat('hciboxclient',parameters('DeploymentID'), '.', resourceGroup().location, '.cloudapp.azure.com')]",
      "type": "string"
    },
    "ARCHost VM username": {
      "value": "azureuser",
      "type": "string"
    },
    "ARCHost VM password": {
      "value": "Password1!!",
      "type": "string"
    }

  }
}
